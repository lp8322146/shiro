<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <description>Shiro Configuration</description>
    <!-- Shiro默认会使用Servlet容器的Session,可通过sessionMode属性来指定使用Shiro原生Session -->
    <!-- 即<property name="sessionMode" value="native"/>,详细说明见官方文档 -->
    <!-- 这里主要是设置自定义的单Realm应用,若有多个Realm,可使用'realms'属性代替 -->
    <bean id="securtiyManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myShiroRealm"/>
    </bean>
    <!-- 继承自AuthorizingRealm的自定义Realm,即指定Shiro验证用户登录的类为自定义的ShiroDbRealm.java -->
    <bean id="myShiroRealm" class="Remal.MyShiroRealm">
        <property name="cacheManager" ref="cacheManager"></property>
    </bean>
    <!-- 定义缓存管理器 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"></bean>
    <!-- Shiro主过滤器本身功能十分强大,其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行 -->
    <!-- Web应用中,Shiro可控制的Web请求必须经过Shiro主过滤器的拦截,Shiro对基于Spring的Web应用提供了完美的支持 -->

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- Shiro的核心安全接口,这个属性是必须的 -->
        <property name="securityManager" ref="securtiyManager"></property>
        <!-- 要求登录时的链接(可根据项目的URL进行替换),非必须的属性,默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
        <property name="loginUrl" value="/login"></property>
        <!--登录成功默认跳转页面，不配置则跳转至”/”，一般可以不配置，直接通过代码进行处理。 -->
        <!-- <property name="successUrl" value="/index.jsp"></property>-->
        <!--unauthorizedUrl：没有权限默认跳转的页面。-->
        <property name="unauthorizedUrl" value="/login"></property>
        <!--Shiro验证URL时,URL匹配成功便不再继续匹配查找
        (所以要注意配置文件中的URL顺序,尤其在使用通配符时)，
        故filterChainDefinitions的配置顺序为自上而下,以最上面的为准-->
        <property name="filterChainDefinitions">
            <!-- Shiro连接约束配置,即过滤链的定义 -->
            <!-- 此处可配合这篇文章来理解各个过滤连的作用http://blog.csdn.net/jadyer/article/details/12172839 -->
            <!-- 下面value值的第一个'/'代表的路径是相对于HttpServletRequest.getContextPath()的值来的 -->
            <!-- anon：它对应的过滤器里面是空的,什么都没做,这里.do和.jsp后面的*表示参数,比方说login.jsp?main这种 -->
            <!-- authc：该过滤器下的页面必须验证后才能访问,它是Shiro内置的一个拦截器
            org.apache.shiro.web.filter.authc.FormAuthenticationFilter -->
            <value>
                /index = authc
                /check = anon
                /login = anon
                /** = authc
            </value>
        </property>
    </bean>


    <!--<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securtiyManager"></property>
    </bean>-->
</beans>